Index: frontend/src/context/AuthContext.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { createContext, useState, ReactNode } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface AuthContextType {\r\n  user: string | null;\r\n  isAuthenticated: boolean;\r\n  signin: (userName: string, password: string) => Promise<void>;\r\n  signout: () => void;\r\n}\r\n\r\nexport const AuthContext = createContext<AuthContextType | undefined>(\r\n  undefined,\r\n);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<string | null>(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const apiUrl = 'http://172.16.67.246:8080';\r\n\r\n  const signin = async (userName: string, password: string) => {\r\n    if (!userName || !password) {\r\n      console.error('아이디와 비밀번호가 필요합니다.');\r\n      setError('아이디와 비밀번호를 입력해주세요.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log(\r\n        `로그인 시도 중 - loginId: ${userName}, password: ${password}`,\r\n      );\r\n\r\n      // FormData 객체 생성 및 필드 추가\r\n      const formData = new FormData();\r\n      formData.append('loginId', userName);\r\n      formData.append('password', password);\r\n\r\n      // axios를 이용한 multipart/form-data 형식의 POST 요청\r\n      const response = await axios.post(`${apiUrl}/api/admin/login`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      const authorizationHeader = response.headers['authorization'];\r\n      const token = authorizationHeader && authorizationHeader.split(' ')[1];\r\n\r\n      setUser(userName);\r\n      setIsAuthenticated(true);\r\n      setError(null);\r\n      localStorage.setItem('token', token);\r\n    } catch (error: any) {\r\n      console.error('로그인 실패:', error);\r\n      setError(error.response?.data?.message || '로그인 실패');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const signout = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  const authValue: AuthContextType = {\r\n    user,\r\n    isAuthenticated,\r\n    signin,\r\n    signout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={authValue}>\r\n      {children}\r\n      {error && <div style={{ color: 'red' }}>{error}</div>}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/context/AuthContext.tsx b/frontend/src/context/AuthContext.tsx
--- a/frontend/src/context/AuthContext.tsx	(revision c0564527debcbd4684d884bfe2e625f978eef3c0)
+++ b/frontend/src/context/AuthContext.tsx	(date 1728746959563)
@@ -20,7 +20,7 @@
   const [user, setUser] = useState<string | null>(null);
   const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);
   const [error, setError] = useState<string | null>(null);
-  const apiUrl = 'http://172.16.67.246:8080';
+  const apiUrl = 'http://localhost:8080';
 
   const signin = async (userName: string, password: string) => {
     if (!userName || !password) {
